---@diagnostic disable: missing-return
---@diagnostic disable: lowercase-global

---@alias addEventHandlerPriority "high" | "normal" | "low" | string
--- addEventHandler
--- Type: shared
--- @param eventName Events
--- @param attachedTo element
--- @param handlerFunction function
--- @overload fun(eventName: "onClientBrowserCreated", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserCursorChange", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserDocumentReady", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserInputFocusChanged", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserLoadingFailed", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserLoadingStart", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserNavigate", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserPopup", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserResourceBlocked", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserTooltip", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientBrowserWhitelistChange", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientColShapeHit", attachedTo: element, handlerFunction: fun(hitElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onClientColShapeLeave", attachedTo: element, handlerFunction: fun(leftElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onClientElementColShapeHit", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientElementColShapeLeave", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientElementDataChange", attachedTo: element, handlerFunction: fun(dataName: string, oldValue: any): any)
--- @overload fun(eventName: "onClientElementDestroy", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientElementDimensionChange", attachedTo: element, handlerFunction: fun(oldDimension: int, newDimension: int): any)
--- @overload fun(eventName: "onClientElementInteriorChange", attachedTo: element, handlerFunction: fun(oldInterior: int, newInterior: int): any)
--- @overload fun(eventName: "onClientElementModelChange", attachedTo: element, handlerFunction: fun(oldModel: int, newModel: int): any)
--- @overload fun(eventName: "onClientElementStreamIn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientElementStreamOut", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientCharacter", attachedTo: element, handlerFunction: fun(character: string): any)
--- @overload fun(eventName: "onClientClick", attachedTo: element, handlerFunction: fun(button: Button, state: State, absoluteX: float, absoluteY: float, worldX: float, worldY: float, worldZ: float, clickedElement: element): any)
--- @overload fun(eventName: "onClientCursorMove", attachedTo: element, handlerFunction: fun(cursorX: float, cursorY: float, absoluteX: float, absoluteY: float, worldX: float, worldY: float, worldZ: float): any)
--- @overload fun(eventName: "onClientDoubleClick", attachedTo: element, handlerFunction: fun(button: string, absoluteX: float, absoluteY: float, worldX: float, worldY: float, worldZ: float, clickedElement: element): any)
--- @overload fun(eventName: "onClientKey", attachedTo: element, handlerFunction: fun(button: string, pressOrRelease: bool): any)
--- @overload fun(eventName: "onClientPaste", attachedTo: element, handlerFunction: fun(pastedText: string): any)
--- @overload fun(eventName: "onClientGUIAccepted", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIBlur", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIChanged", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIClick", attachedTo: element, handlerFunction: fun(button: string, state: string): any)
--- @overload fun(eventName: "onClientGUIComboBoxAccepted", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIDoubleClick", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIFocus", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIMouseDown", attachedTo: element, handlerFunction: fun(button: string): any)
--- @overload fun(eventName: "onClientGUIMouseUp", attachedTo: element, handlerFunction: fun(button: string): any)
--- @overload fun(eventName: "onClientGUIMove", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUIScroll", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUISize", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientGUITabSwitched", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientMouseEnter", attachedTo: element, handlerFunction: fun(enteredElement: element): any)
--- @overload fun(eventName: "onClientMouseLeave", attachedTo: element, handlerFunction: fun(leftElement: element): any)
--- @overload fun(eventName: "onClientMouseMove", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientMouseWheel", attachedTo: element, handlerFunction: fun(upOrDown: string): any)
--- @overload fun(eventName: "onClientMarkerHit", attachedTo: element, handlerFunction: fun(hitElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onClientMarkerLeave", attachedTo: element, handlerFunction: fun(leftElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onClientPedDamage", attachedTo: element, handlerFunction: fun(attacker: element, weapon: int, bodypart: int, loss: float): any)
--- @overload fun(eventName: "onClientPedHeliKilled", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPedHitByWaterCannon", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPedVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onClientPedVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientPedWasted", attachedTo: element, handlerFunction: fun(killer: element, weapon: int, bodypart: int): any)
--- @overload fun(eventName: "onClientPedWeaponFire", attachedTo: element, handlerFunction: fun(weapon: int, ammo: int, ammoInClip: int, hitX: float, hitY: float, hitZ: float, hitElement: element): any)
--- @overload fun(eventName: "onClientPedStep", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPickupHit", attachedTo: element, handlerFunction: fun(hitElement: element): any)
--- @overload fun(eventName: "onClientPickupLeave", attachedTo: element, handlerFunction: fun(leftElement: element): any)
--- @overload fun(eventName: "onClientPlayerChangeNick", attachedTo: element, handlerFunction: fun(oldNick: string, newNick: string): any)
--- @overload fun(eventName: "onClientPlayerChoke", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerDamage", attachedTo: element, handlerFunction: fun(attacker: element, weapon: int, bodypart: int, loss: float): any)
--- @overload fun(eventName: "onClientPlayerHeliKilled", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerHitByWaterCannon", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerJoin", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerPickupHit", attachedTo: element, handlerFunction: fun(pickup: element): any)
--- @overload fun(eventName: "onClientPlayerPickupLeave", attachedTo: element, handlerFunction: fun(pickup: element): any)
--- @overload fun(eventName: "onClientPlayerQuit", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerRadioSwitch", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerSpawn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerStealthKill", attachedTo: element, handlerFunction: fun(target: element): any)
--- @overload fun(eventName: "onClientPlayerStuntFinish", attachedTo: element, handlerFunction: fun(stuntType: string, stuntID: int, distance: float, height: float, rotation: int): any)
--- @overload fun(eventName: "onClientPlayerStuntStart", attachedTo: element, handlerFunction: fun(stuntType: string, rotation: int): any)
--- @overload fun(eventName: "onClientPlayerTarget", attachedTo: element, handlerFunction: fun(target: element): any)
--- @overload fun(eventName: "onClientPlayerVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onClientPlayerVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientPlayerVoicePause", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerVoiceResumed", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerVoiceStart", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerVoiceStop", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerWasted", attachedTo: element, handlerFunction: fun(killer: element, weapon: int, bodypart: int): any)
--- @overload fun(eventName: "onClientPlayerWeaponFire", attachedTo: element, handlerFunction: fun(weapon: int, ammo: int, ammoInClip: int, hitX: float, hitY: float, hitZ: float, hitElement: element): any)
--- @overload fun(eventName: "onClientPlayerWeaponSwitch", attachedTo: element, handlerFunction: fun(previousWeaponID: int, currentWeaponID: int): any)
--- @overload fun(eventName: "onClientObjectBreak", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientObjectDamage", attachedTo: element, handlerFunction: fun(attacker: element, weapon: int, loss: float): any)
--- @overload fun(eventName: "onClientObjectMoveStart", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientObjectMoveStop", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientProjectileCreation", attachedTo: element, handlerFunction: fun(creator: element): any)
--- @overload fun(eventName: "onClientResourceFileDownload", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientResourceStart", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientResourceStop", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundBeat", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundChangedMeta", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundFinishedDownload", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundStarted", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundStopped", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientSoundStream", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientTrailerAttach", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientTrailerDetach", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientVehicleCollision", attachedTo: element, handlerFunction: fun(hitElement: element, force: float, bodyPart: int, collisionX: float, collisionY: float, collisionZ: float): any)
--- @overload fun(eventName: "onClientVehicleDamage", attachedTo: element, handlerFunction: fun(loss: float): any)
--- @overload fun(eventName: "onClientVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onClientVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientVehicleExplode", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientVehicleNitroStateChange", attachedTo: element, handlerFunction: fun(state: bool): any)
--- @overload fun(eventName: "onClientVehicleRespawn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientVehicleStartEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onClientVehicleStartExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onClientVehicleWeaponHit", attachedTo: element, handlerFunction: fun(hitX: float, hitY: float, hitZ: float): any)
--- @overload fun(eventName: "onClientWeaponFire", attachedTo: element, handlerFunction: fun(weapon: int, ammo: int, ammoInClip: int, hitX: float, hitY: float, hitZ: float, hitElement: element): any)
--- @overload fun(eventName: "onClientChatMessage", attachedTo: element, handlerFunction: fun(message: string, messageType: int): any)
--- @overload fun(eventName: "onClientConsole", attachedTo: element, handlerFunction: fun(command: string): any)
--- @overload fun(eventName: "onClientCoreCommand", attachedTo: element, handlerFunction: fun(command: string): any)
--- @overload fun(eventName: "onClientDebugMessage", attachedTo: element, handlerFunction: fun(message: string, level: int, file: string, line: int): any)
--- @overload fun(eventName: "onClientExplosion", attachedTo: element, handlerFunction: fun(explosionType: int, x: float, y: float, z: float): any)
--- @overload fun(eventName: "onClientFileDownloadComplete", attachedTo: element, handlerFunction: fun(fileName: string): any)
--- @overload fun(eventName: "onClientHUDRender", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientMinimize", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientMTAFocusChange", attachedTo: element, handlerFunction: fun(gainFocus: bool): any)
--- @overload fun(eventName: "onClientPedsProcessed", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientPlayerNetworkStatus", attachedTo: element, handlerFunction: fun(status: int): any)
--- @overload fun(eventName: "onClientPreRender", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientRender", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientRestore", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onClientTransferBoxProgressChange", attachedTo: element, handlerFunction: fun(progress: int): any)
--- @overload fun(eventName: "onClientTransferBoxVisibilityChange", attachedTo: element, handlerFunction: fun(visible: bool): any)
--- @overload fun(eventName: "onClientWorldSound", attachedTo: element, handlerFunction: fun(soundID: int, x: float, y: float, z: float): any)
--- @overload fun(eventName: "onAccountDataChange", attachedTo: element, handlerFunction: fun(account: account, dataName: string, value: any): any)
--- @overload fun(eventName: "onAccountCreate", attachedTo: element, handlerFunction: fun(account: account): any)
--- @overload fun(eventName: "onAccountRemove", attachedTo: element, handlerFunction: fun(account: account): any)
--- @overload fun(eventName: "onConsole", attachedTo: element, handlerFunction: fun(command: string): any)
--- @overload fun(eventName: "onColShapeHit", attachedTo: element, handlerFunction: fun(hitElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onColShapeLeave", attachedTo: element, handlerFunction: fun(leftElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onElementClicked", attachedTo: element, handlerFunction: fun(mouseButton: string, buttonState: string, clickedElement: element): any)
--- @overload fun(eventName: "onElementColShapeHit", attachedTo: element, handlerFunction: fun(hitElement: element): any)
--- @overload fun(eventName: "onElementColShapeLeave", attachedTo: element, handlerFunction: fun(leftElement: element): any)
--- @overload fun(eventName: "onElementDataChange", attachedTo: element, handlerFunction: fun(dataName: string, oldValue: any, newValue: any): any)
--- @overload fun(eventName: "onElementDestroy", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onElementDimensionChange", attachedTo: element, handlerFunction: fun(oldDimension: int, newDimension: int): any)
--- @overload fun(eventName: "onElementInteriorChange", attachedTo: element, handlerFunction: fun(oldInterior: int, newInterior: int): any)
--- @overload fun(eventName: "onElementModelChange", attachedTo: element, handlerFunction: fun(oldModel: int, newModel: int): any)
--- @overload fun(eventName: "onElementStartSync", attachedTo: element, handlerFunction: fun(syncer: element): any)
--- @overload fun(eventName: "onElementStopSync", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onMarkerHit", attachedTo: element, handlerFunction: fun(hitElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onMarkerLeave", attachedTo: element, handlerFunction: fun(leftElement: element, matchingDimension: bool): any)
--- @overload fun(eventName: "onPickupHit", attachedTo: element, handlerFunction: fun(hitElement: element): any)
--- @overload fun(eventName: "onPickupLeave", attachedTo: element, handlerFunction: fun(leftElement: element): any)
--- @overload fun(eventName: "onPickupSpawn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPickupUse", attachedTo: element, handlerFunction: fun(player: element): any)
--- @overload fun(eventName: "onPlayerACInfo", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerBan", attachedTo: element, handlerFunction: fun(bannedPlayer: element, ban: ban): any)
--- @overload fun(eventName: "onPlayerChangeNick", attachedTo: element, handlerFunction: fun(oldNick: string, newNick: string): any)
--- @overload fun(eventName: "onPlayerChat", attachedTo: element, handlerFunction: fun(message: string, messageType: int): any)
--- @overload fun(eventName: "onPlayerClick", attachedTo: element, handlerFunction: fun(mouseButton: string, buttonState: string, clickedElement: element): any)
--- @overload fun(eventName: "onPlayerCommand", attachedTo: element, handlerFunction: fun(command: string): any)
--- @overload fun(eventName: "onPlayerConnect", attachedTo: element, handlerFunction: fun(nick: string, ip: string, username: string, serial: string): any)
--- @overload fun(eventName: "onPlayerContact", attachedTo: element, handlerFunction: fun(contactElement: element): any)
--- @overload fun(eventName: "onPlayerDamage", attachedTo: element, handlerFunction: fun(attacker: element, weapon: int, bodypart: int, loss: float): any)
--- @overload fun(eventName: "onPlayerDetonateSatchels", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerJoin", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerLogin", attachedTo: element, handlerFunction: fun(previousAccount: account, currentAccount: account): any)
--- @overload fun(eventName: "onPlayerLogout", attachedTo: element, handlerFunction: fun(currentAccount: account): any)
--- @overload fun(eventName: "onPlayerMarkerHit", attachedTo: element, handlerFunction: fun(markerHit: element): any)
--- @overload fun(eventName: "onPlayerMarkerLeave", attachedTo: element, handlerFunction: fun(markerLeft: element): any)
--- @overload fun(eventName: "onPlayerModInfo", attachedTo: element, handlerFunction: fun(modList: table): any)
--- @overload fun(eventName: "onPlayerMute", attachedTo: element, handlerFunction: fun(mutedPlayer: element): any)
--- @overload fun(eventName: "onPlayerNetworkStatus", attachedTo: element, handlerFunction: fun(status: int): any)
--- @overload fun(eventName: "onPlayerPickupHit", attachedTo: element, handlerFunction: fun(pickup: element): any)
--- @overload fun(eventName: "onPlayerPickupLeave", attachedTo: element, handlerFunction: fun(pickup: element): any)
--- @overload fun(eventName: "onPlayerPickupUse", attachedTo: element, handlerFunction: fun(pickup: element): any)
--- @overload fun(eventName: "onPlayerPrivateMessage", attachedTo: element, handlerFunction: fun(message: string, recipient: element): any)
--- @overload fun(eventName: "onPlayerProjectileCreation", attachedTo: element, handlerFunction: fun(creator: element, weaponType: int, posX: float, posY: float, posZ: float): any)
--- @overload fun(eventName: "onPlayerQuit", attachedTo: element, handlerFunction: fun(quitType: string, reason: string, responsibleElement: element): any)
--- @overload fun(eventName: "onPlayerScreenShot", attachedTo: element, handlerFunction: fun(resource: resource, status: string, pixels: string, timestamp: int): any)
--- @overload fun(eventName: "onPlayerSpawn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerStealthKill", attachedTo: element, handlerFunction: fun(targetPlayer: element): any)
--- @overload fun(eventName: "onPlayerTarget", attachedTo: element, handlerFunction: fun(targetElement: element): any)
--- @overload fun(eventName: "onPlayerTeamChange", attachedTo: element, handlerFunction: fun(oldTeam: team, newTeam: team): any)
--- @overload fun(eventName: "onPlayerTriggerEventThreshold", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerTriggerInvalidEvent", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerUnmute", attachedTo: element, handlerFunction: fun(unmutedPlayer: element): any)
--- @overload fun(eventName: "onPlayerVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onPlayerVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onPlayerVoiceStart", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerVoiceStop", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onPlayerWasted", attachedTo: element, handlerFunction: fun(ammo: int, killer: element, weapon: int, bodypart: int): any)
--- @overload fun(eventName: "onPlayerWeaponFire", attachedTo: element, handlerFunction: fun(weapon: int, ammo: int, ammoInClip: int, hitX: float, hitY: float, hitZ: float, hitElement: element): any)
--- @overload fun(eventName: "onPlayerWeaponSwitch", attachedTo: element, handlerFunction: fun(previousWeaponID: int, currentWeaponID: int): any)
--- @overload fun(eventName: "onPedDamage", attachedTo: element, handlerFunction: fun(attacker: element, weapon: int, bodypart: int, loss: float): any)
--- @overload fun(eventName: "onPedVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onPedVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onPedWasted", attachedTo: element, handlerFunction: fun(killer: element, weapon: int, bodypart: int): any)
--- @overload fun(eventName: "onPedWeaponSwitch", attachedTo: element, handlerFunction: fun(previousWeaponID: int, currentWeaponID: int): any)
--- @overload fun(eventName: "onResourceStateChange", attachedTo: element, handlerFunction: fun(state: string): any)
--- @overload fun(eventName: "onPlayerResourceStart", attachedTo: element, handlerFunction: fun(startedResource: resource): any)
--- @overload fun(eventName: "onResourceLoadStateChange", attachedTo: element, handlerFunction: fun(resource: resource, loadState: string): any)
--- @overload fun(eventName: "onResourcePreStart", attachedTo: element, handlerFunction: fun(resource: resource): any)
--- @overload fun(eventName: "onResourceStart", attachedTo: element, handlerFunction: fun(startedResource: resource): any)
--- @overload fun(eventName: "onResourceStop", attachedTo: element, handlerFunction: fun(stoppedResource: resource): any)
--- @overload fun(eventName: "onBan", attachedTo: element, handlerFunction: fun(bannedPlayer: element, ban: ban): any)
--- @overload fun(eventName: "onChatMessage", attachedTo: element, handlerFunction: fun(message: string, messageType: int): any)
--- @overload fun(eventName: "onDebugMessage", attachedTo: element, handlerFunction: fun(message: string, level: int, file: string, line: int): any)
--- @overload fun(eventName: "onExplosion", attachedTo: element, handlerFunction: fun(explosionType: int, x: float, y: float, z: float): any)
--- @overload fun(eventName: "onSettingChange", attachedTo: element, handlerFunction: fun(settingName: string, oldValue: any, newValue: any): any)
--- @overload fun(eventName: "onUnban", attachedTo: element, handlerFunction: fun(ban: ban): any)
--- @overload fun(eventName: "onTrailerAttach", attachedTo: element, handlerFunction: fun(trailer: element): any)
--- @overload fun(eventName: "onTrailerDetach", attachedTo: element, handlerFunction: fun(trailer: element): any)
--- @overload fun(eventName: "onVehicleDamage", attachedTo: element, handlerFunction: fun(loss: float): any)
--- @overload fun(eventName: "onVehicleEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onVehicleExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onVehicleExplode", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onVehicleRespawn", attachedTo: element, handlerFunction: fun(): any)
--- @overload fun(eventName: "onVehicleStartEnter", attachedTo: element, handlerFunction: fun(vehicle: element, seat: int): any)
--- @overload fun(eventName: "onVehicleStartExit", attachedTo: element, handlerFunction: fun(vehicle: element): any)
--- @overload fun(eventName: "onWeaponFire", attachedTo: element, handlerFunction: fun(weapon: int, ammo: int, ammoInClip: int, hitX: float, hitY: float, hitZ: float, hitElement: element): any)
--- @param getPropagated? boolean
--- @param priority? string
function addEventHandler(eventName, attachedTo, handlerFunction, getPropagated, priority)
end


---@alias Button 'left' | 'middle' | 'right'
---@alias State 'down' | 'up'


---@alias Events 'onConsole'
--- | 'onClientClick'
--- | 'onClientCharacter'
--- | 'onClientBrowserCreated'
--- | 'onClientBrowserCursorChange'
--- | 'onClientBrowserDocumentReady'
--- | 'onClientBrowserInputFocusChanged'
--- | 'onClientBrowserLoadingFailed'
--- | 'onClientBrowserLoadingStart'
--- | 'onClientBrowserNavigate'
--- | 'onClientBrowserPopup'
--- | 'onClientBrowserResourceBlocked'
--- | 'onClientBrowserTooltip'
--- | 'onClientBrowserWhitelistChange'
--- | 'onClientColShapeHit'
--- | 'onClientColShapeLeave'
--- | 'onClientElementColShapeHit'
--- | 'onClientElementColShapeLeave'
--- | 'onClientElementDataChange'
--- | 'onClientElementDestroy'
--- | 'onClientElementDimensionChange'
--- | 'onClientElementInteriorChange'
--- | 'onClientElementModelChange'
--- | 'onClientElementStreamIn'
--- | 'onClientElementStreamOut'
--- | 'onClientCursorMove'
--- | 'onClientDoubleClick'
--- | 'onClientKey'
--- | 'onClientPaste'
--- | 'onClientGUIAccepted'
--- | 'onClientGUIBlur'
--- | 'onClientGUIChanged'
--- | 'onClientGUIClick'
--- | 'onClientGUIComboBoxAccepted'
--- | 'onClientGUIDoubleClick'
--- | 'onClientGUIFocus'
--- | 'onClientGUIMouseDown'
--- | 'onClientGUIMouseUp'
--- | 'onClientGUIMove'
--- | 'onClientGUIScroll'
--- | 'onClientGUISize'
--- | 'onClientGUITabSwitched'
--- | 'onClientMouseEnter'
--- | 'onClientMouseLeave'
--- | 'onClientMouseMove'
--- | 'onClientMouseWheel'
--- | 'onClientMarkerHit'
--- | 'onClientMarkerLeave'
--- | 'onClientPedDamage'
--- | 'onClientPedHeliKilled'
--- | 'onClientPedHitByWaterCannon'
--- | 'onClientPedVehicleEnter'
--- | 'onClientPedVehicleExit'
--- | 'onClientPedWasted'
--- | 'onClientPedWeaponFire'
--- | 'onClientPedStep'
--- | 'onClientPickupHit'
--- | 'onClientPickupLeave'
--- | 'onClientPlayerChangeNick'
--- | 'onClientPlayerChoke'
--- | 'onClientPlayerDamage'
--- | 'onClientPlayerHeliKilled'
--- | 'onClientPlayerHitByWaterCannon'
--- | 'onClientPlayerJoin'
--- | 'onClientPlayerPickupHit'
--- | 'onClientPlayerPickupLeave'
--- | 'onClientPlayerQuit'
--- | 'onClientPlayerRadioSwitch'
--- | 'onClientPlayerSpawn'
--- | 'onClientPlayerStealthKill'
--- | 'onClientPlayerStuntFinish'
--- | 'onClientPlayerStuntStart'
--- | 'onClientPlayerTarget'
--- | 'onClientPlayerVehicleEnter'
--- | 'onClientPlayerVehicleExit'
--- | 'onClientPlayerVoicePause'
--- | 'onClientPlayerVoiceResumed'
--- | 'onClientPlayerVoiceStart'
--- | 'onClientPlayerVoiceStop'
--- | 'onClientPlayerWasted'
--- | 'onClientPlayerWeaponFire'
--- | 'onClientPlayerWeaponSwitch'
--- | 'onClientObjectBreak'
--- | 'onClientObjectDamage'
--- | 'onClientObjectMoveStart'
--- | 'onClientObjectMoveStop'
--- | 'onClientProjectileCreation'
--- | 'onClientResourceFileDownload'
--- | 'onClientResourceStart'
--- | 'onClientResourceStop'
--- | 'onClientSoundBeat'
--- | 'onClientSoundChangedMeta'
--- | 'onClientSoundFinishedDownload'
--- | 'onClientSoundStarted'
--- | 'onClientSoundStopped'
--- | 'onClientSoundStream'
--- | 'onClientTrailerAttach'
--- | 'onClientTrailerDetach'
--- | 'onClientVehicleCollision'
--- | 'onClientVehicleDamage'
--- | 'onClientVehicleEnter'
--- | 'onClientVehicleExit'
--- | 'onClientVehicleExplode'
--- | 'onClientVehicleNitroStateChange'
--- | 'onClientVehicleRespawn'
--- | 'onClientVehicleStartEnter'
--- | 'onClientVehicleStartExit'
--- | 'onClientVehicleWeaponHit'
--- | 'onClientWeaponFire'
--- | 'onClientChatMessage'
--- | 'onClientConsole'
--- | 'onClientCoreCommand'
--- | 'onClientDebugMessage'
--- | 'onClientExplosion'
--- | 'onClientFileDownloadComplete'
--- | 'onClientHUDRender'
--- | 'onClientMinimize'
--- | 'onClientMTAFocusChange'
--- | 'onClientPedsProcessed'
--- | 'onClientPlayerNetworkStatus'
--- | 'onClientPreRender'
--- | 'onClientRender'
--- | 'onClientRestore'
--- | 'onClientTransferBoxProgressChange'
--- | 'onClientTransferBoxVisibilityChange'
--- | 'onClientWorldSound'
--- | 'onAccountDataChange'
--- | 'onAccountCreate'
--- | 'onAccountRemove'
--- | 'onColShapeHit'
--- | 'onColShapeLeave'
--- | 'onElementClicked'
--- | 'onElementColShapeHit'
--- | 'onElementColShapeLeave'
--- | 'onElementDataChange'
--- | 'onElementDestroy'
--- | 'onElementDimensionChange'
--- | 'onElementInteriorChange'
--- | 'onElementModelChange'
--- | 'onElementStartSync'
--- | 'onElementStopSync'
--- | 'onMarkerHit'
--- | 'onMarkerLeave'
--- | 'onPickupHit'
--- | 'onPickupLeave'
--- | 'onPickupSpawn'
--- | 'onPickupUse'
--- | 'onPlayerACInfo'
--- | 'onPlayerBan'
--- | 'onPlayerChangeNick'
--- | 'onPlayerChat'
--- | 'onPlayerClick'
--- | 'onPlayerCommand'
--- | 'onPlayerConnect'
--- | 'onPlayerContact'
--- | 'onPlayerDamage'
--- | 'onPlayerDetonateSatchels'
--- | 'onPlayerJoin'
--- | 'onPlayerLogin'
--- | 'onPlayerLogout'
--- | 'onPlayerMarkerHit'
--- | 'onPlayerMarkerLeave'
--- | 'onPlayerModInfo'
--- | 'onPlayerMute'
--- | 'onPlayerNetworkStatus'
--- | 'onPlayerPickupHit'
--- | 'onPlayerPickupLeave'
--- | 'onPlayerPickupUse'
--- | 'onPlayerPrivateMessage'
--- | 'onPlayerProjectileCreation'
--- | 'onPlayerQuit'
--- | 'onPlayerScreenShot'
--- | 'onPlayerSpawn'
--- | 'onPlayerStealthKill'
--- | 'onPlayerTarget'
--- | 'onPlayerTeamChange'
--- | 'onPlayerTriggerEventThreshold'
--- | 'onPlayerTriggerInvalidEvent'
--- | 'onPlayerUnmute'
--- | 'onPlayerVehicleEnter'
--- | 'onPlayerVehicleExit'
--- | 'onPlayerVoiceStart'
--- | 'onPlayerVoiceStop'
--- | 'onPlayerWasted'
--- | 'onPlayerWeaponFire'
--- | 'onPlayerWeaponSwitch'
--- | 'onPedDamage'
--- | 'onPedVehicleEnter'
--- | 'onPedVehicleExit'
--- | 'onPedWasted'
--- | 'onPedWeaponSwitch'
--- | 'onResourceStateChange'
--- | 'onPlayerResourceStart'
--- | 'onResourceLoadStateChange'
--- | 'onResourcePreStart'
--- | 'onResourceStart'
--- | 'onResourceStop'
--- | 'onBan'
--- | 'onChatMessage'
--- | 'onDebugMessage'
--- | 'onExplosion'
--- | 'onSettingChange'
--- | 'onUnban'
--- | 'onTrailerAttach'
--- | 'onTrailerDetach'
--- | 'onVehicleDamage'
--- | 'onVehicleEnter'
--- | 'onVehicleExit'
--- | 'onVehicleExplode'
--- | 'onVehicleRespawn'
--- | 'onVehicleStartEnter'
--- | 'onVehicleStartExit'
--- | 'onWeaponFire'
--- | string